{"version":3,"file":"main-es2015.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/todo-form/todo-form.component.ts","./src/app/components/todo-list/todo-list.component.ts","./src/app/components/todo/todo.component.ts","./src/app/state/state.module.ts","./src/app/state/state.reducers.ts","./src/app/state/todo/index.ts","./src/app/state/todo/todo.actions.ts","./src/app/state/todo/todo.model.ts","./src/app/state/todo/todo.reducer.ts","./src/main.ts","./src/polyfills.ts","./src/app/app.component.html","./src/app/components/todo-form/todo-form.component.html","./src/app/components/todo-list/todo-list.component.html","./src/app/components/todo/todo.component.html"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { State } from './state/state.interface';\nimport { completeToDos, incompleteToDos } from './state/todo';\nimport { AddToDo, CompleteToDo, IncompleteToDo } from './state/todo/todo.actions';\nimport { generateToDos, ToDo } from './state/todo/todo.model';\n\n@Component({\n  selector: 'my-app',\n  templateUrl: './app.component.html',\n  styleUrls: [ './app.component.scss' ]\n})\nexport class AppComponent implements OnInit {\n\n  completeToDos: Observable<Array<ToDo>>;\n\n  incompleteToDos: Observable<Array<ToDo>>;\n\n\n  taskContents:any;\n\n  constructor(private store: Store<State>) { }\n  \n  \n  ngOnInit(){\n    this.initialize()\n  }\n\n  initialize() {\n    generateToDos().forEach(todo => this.store.dispatch(new AddToDo(todo)));\n    this.completeToDos = this.store.pipe(select(completeToDos));\n    this.incompleteToDos = this.store.pipe(select(incompleteToDos));\n  }\n\n  addToDo() {  \n    this.store.dispatch(new AddToDo({\n      id: Math.random(),\n      complete: false,\n      task: this.taskContents\n    }));\n  }\n\n  onAddToDoChange(e) {\n    console.log(e)\n    this.taskContents = e.task\n  }\n\n  onCompleteToDo(toDo: ToDo) {\n    this.store.dispatch(new CompleteToDo(toDo));\n  }\n\n  onIncompleteToDo(toDo: ToDo) {\n    this.store.dispatch(new IncompleteToDo(toDo));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatInputModule,\n  MatFormFieldModule,\n  MatListModule\n} from '@angular/material';\n\nimport { AppComponent } from './app.component';\nimport { TodoComponent } from './components/todo/todo.component';\nimport { TodoListComponent } from './components/todo-list/todo-list.component';\nimport { StateModule } from './state/state.module';\nimport { TodoFormComponent } from './components/todo-form/todo-form.component';\n\n@NgModule({\n  imports: [ \n    BrowserModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    FormsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatListModule,\n    StateModule.forRoot(),\n    ReactiveFormsModule\n  ],\n  declarations: [ AppComponent, TodoComponent, TodoListComponent, TodoFormComponent ],\n  bootstrap:    [ AppComponent ]\n})\nexport class AppModule { }\n","import { Component, EventEmitter, OnDestroy, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { debounceTime, takeUntil } from 'rxjs/operators';\n\nimport { ToDo } from '../../state/todo/todo.model';\n\n@Component({\n  selector: 'app-todo-form',\n  templateUrl: './todo-form.component.html',\n  styleUrls: ['./todo-form.component.scss']\n})\nexport class TodoFormComponent implements OnDestroy, OnInit {\n\n  @Output() toDoChange = new EventEmitter<Partial<ToDo>>();\n\n  task: FormControl;\n\n  private unsubscribe = new Subject<void>();\n\n  constructor() { }\n\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n  ngOnInit() {\n    this.task = new FormControl();\n    this.task.valueChanges\n      .pipe(debounceTime(200), takeUntil(this.unsubscribe))\n      .subscribe(value => this.toDoChange.emit({ task: value }));\n  }\n\n}","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material';\n\nimport { ToDo } from '../../state/todo/todo.model'\n\n@Component({\n  selector: 'app-todo-list',\n  templateUrl: './todo-list.component.html',\n  styleUrls: ['./todo-list.component.scss']\n})\nexport class TodoListComponent {\n\n  @Input() toDos: ToDo[];\n\n  @Output() toDoChange = new EventEmitter<ToDo>();\n\n  constructor() { }\n\n  onCompleteChange(toDo: ToDo, change: MatCheckboxChange) {\n    console.log(toDo)\n    this.toDoChange.emit({\n      ...toDo,\n      complete: change.checked\n    });\n  }\n\n}","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material';\n\nimport { ToDo } from '../../state/todo/todo.model'\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.scss']\n})\nexport class TodoComponent {\n\n  @Input() toDo: ToDo;\n\n  @Output() completeChange = new EventEmitter<MatCheckboxChange>();\n\n}","import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nimport { appReducers } from './state.reducers';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forRoot(appReducers),\n    StoreDevtoolsModule.instrument()\n  ],\n  declarations: []\n})\nexport class StateModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: StateModule\n  ) {\n    if (parentModule) {\n      throw new Error('StateModule is already loaded. Import it in the AppModule only');\n    }\n  }\n\n  static forRoot(): ModuleWithProviders<StateModule> {\n    return {\n      ngModule: StateModule\n    };\n  }\n}\n","import { ActionReducerMap, MetaReducer } from '@ngrx/store';\n\nimport { State } from './state.interface';\nimport { toDoReducer } from './todo/todo.reducer';\n\nexport const appReducers: ActionReducerMap<State> = {\n  todo: toDoReducer\n};","import { createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport { ToDo } from './todo.model';\nimport { ToDoState, toDoAdapter } from './todo.reducer';\n\nexport const selectToDoState = createFeatureSelector<ToDoState>('todo');\n\nexport const {\n  selectIds: toDoIds,\n  selectEntities: toDoEntities,\n  selectAll: allToDos,\n  selectTotal: totalToDos,\n} = toDoAdapter.getSelectors(selectToDoState);\n\nexport const completeToDos =  createSelector(allToDos, (toDos: Array<ToDo>) => toDos.filter(toDo => toDo.complete));\nexport const incompleteToDos = createSelector(allToDos, (toDos: Array<ToDo>) => toDos.filter(toDo => !toDo.complete));","import { Action } from '@ngrx/store';\n\nimport { ToDo } from './todo.model';\n\nexport enum ToDoActionTypes {\n  AddToDo = '[Todo] Add Todo',\n  CompleteToDo = '[Todo] Complete Todo',\n  IncompleteToDo = '[Todo] Incomplete Todo',\n}\n\nexport class AddToDo implements Action {\n  readonly type = ToDoActionTypes.AddToDo;\n  constructor(public payload: ToDo) {}\n}\n\n\nexport class CompleteToDo implements Action {\n  readonly type = ToDoActionTypes.CompleteToDo;\n  constructor(public payload: ToDo) {}\n}\n\nexport class IncompleteToDo implements Action {\n  readonly type = ToDoActionTypes.IncompleteToDo;\n  constructor(public payload: ToDo) {}\n}\n\n\nexport type ToDoActions = \n  | AddToDo\n  | CompleteToDo\n  | IncompleteToDo\n","export interface ToDo {\n  id: number;\n  task: string;\n  complete: boolean;\n}\n\nexport function generateToDos(): ToDo[] {\n  return [\n    {\n      id: 1,\n      task: 'Watch Ozark Season 2',\n      complete: false\n    },\n    {\n      id: 2,\n      task: 'Use NgRx in my to-do app',\n      complete: true\n    }\n  ];\n}","import { EntityAdapter, EntityState, createEntityAdapter } from '@ngrx/entity';\n\nimport { ToDoActionTypes, ToDoActions } from './todo.actions';\nimport { ToDo } from './todo.model';\n\nexport interface ToDoState extends EntityState<ToDo> {}\n\nexport const toDoAdapter: EntityAdapter<ToDo> = createEntityAdapter<ToDo>();\n\nexport const initialSiteState: ToDoState = toDoAdapter.getInitialState();\n\nexport function toDoReducer(state: ToDoState = initialSiteState, action: ToDoActions) {\n  switch (action.type) {\n    case ToDoActionTypes.AddToDo:\n      return toDoAdapter.addOne(action.payload, state);\n    case ToDoActionTypes.CompleteToDo:\n      return toDoAdapter.updateOne({\n        id: action.payload.id,\n        changes: {\n          ...action.payload,\n          complete: true\n        }\n      }, state);\n    case ToDoActionTypes.IncompleteToDo:\n      return toDoAdapter.updateOne({\n        id: action.payload.id,\n        changes: {\n          ...action.payload,\n          complete: false\n        }\n      }, state);\n    default: {\n      return state;\n    }\n  }\n}","import './polyfills';\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule).then(ref => {\n  // Ensure Angular destroys itself on hot reloads.\n  if (window['ngRef']) {\n    window['ngRef'].destroy();\n  }\n  window['ngRef'] = ref;\n\n  // Otherwise, log the boot error\n}).catch(err => console.error(err));","/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol';\n// import 'core-js/es6/object';\n// import 'core-js/es6/function';\n// import 'core-js/es6/parse-int';\n// import 'core-js/es6/parse-float';\n// import 'core-js/es6/number';\n// import 'core-js/es6/math';\n// import 'core-js/es6/string';\n// import 'core-js/es6/date';\n// import 'core-js/es6/array';\n// import 'core-js/es6/regexp';\n// import 'core-js/es6/map';\n// import 'core-js/es6/set';\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/** IE10 and IE11 requires the following to support `@angular/animation`. */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n\n/** Evergreen browsers require these. **/\nimport 'core-js/es6/reflect';\nimport 'core-js/es7/reflect';\n\n\n/** ALL Firefox browsers require the following to support `@angular/animation`. **/\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n\n\n/***************************************************************************************************\n * Zone JS is required by Angular itself.\n */\nimport 'zone.js';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\n/**\n * Date, currency, decimal and percent pipes.\n * Needed for: All but Chrome, Firefox, Edge, IE11 and Safari 10\n */\n// import 'intl';  // Run `npm install --save intl`.","export default \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start stretch\\\" class=\\\"cards\\\">\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\n    <div fxFlex=\\\"90%\\\" fxFlex.md=\\\"66.6667%\\\" fxFlex.gt-md=\\\"50%\\\">\\n      <mat-card>\\n        <mat-card-header>\\n          <mat-card-title><h2>To Do List</h2></mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content>\\n          <ng-container *ngIf=\\\"incompleteToDos | async; let toDos\\\">\\n            <ng-container *ngIf=\\\"toDos.length > 0; else allDone\\\">\\n              <app-todo-list [toDos]=\\\"toDos\\\" (toDoChange)=\\\"onCompleteToDo($event)\\\"></app-todo-list>\\n            </ng-container>\\n            <ng-template #allDone>\\n              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n                <h4>All Done!! 🏖</h4>\\n              </div>\\n            </ng-template>\\n          </ng-container>\\n        </mat-card-content>\\n      </mat-card>\\n\\n      <mat-card>\\n        <mat-card-header>\\n          <mat-card-title><h2>Add To Do</h2></mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content>\\n          <app-todo-form (toDoChange)=\\\"onAddToDoChange($event)\\\"></app-todo-form>\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\">\\n            <button mat-button color=\\\"primary\\\" (click)=\\\"addToDo()\\\">Add To Do</button>\\n          </div>\\n        </mat-card-content>\\n      </mat-card>\\n\\n      <mat-card>\\n        <mat-card-header>\\n          <mat-card-title><h2>Completed 🎉</h2></mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content>\\n          <app-todo-list [toDos]=\\\"completeToDos | async\\\" (toDoChange)=\\\"onIncompleteToDo($event)\\\"></app-todo-list>\\n        </mat-card-content>\\n      </mat-card>\\n    </div>\\n  </div>\\n</div>\";","export default \"<mat-form-field>\\n  <input matInput [formControl]=\\\"task\\\">\\n</mat-form-field>\";","export default \"<mat-list role=\\\"list\\\">\\n  <app-todo *ngFor=\\\"let toDo of toDos\\\" [toDo]=\\\"toDo\\\" (completeChange)=\\\"onCompleteChange(toDo, $event)\\\"></app-todo>\\n</mat-list>\";","export default \"<mat-list-item [class.complete]=\\\"toDo?.complete\\\">\\n  <mat-checkbox [checked]=\\\"toDo.complete\\\" (change)=\\\"this.completeChange.emit($event)\\\">{{ toDo?.task }}</mat-checkbox>\\n</mat-list-item>\";"],"names":[],"sourceRoot":"webpack:///"}